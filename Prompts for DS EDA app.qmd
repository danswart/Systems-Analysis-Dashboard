---
title: "Claude Prompts for Ultimate EDA Dashboard"
format: html
---

## Prompt 1

Today we build my 'Ultimate EDA Shiny App dashboard"!   Here is the grand scheme:  Start with a UI that will allow the user to upload the csv or Excel file of their choice.  The app will have a checkbox that allows the user to specify if first row is a header.  Then, create a user drop down list of the contents of each column in the database (except for any 'value' column) for filtering into a DT() table that will display 30, 40 or 50 rows based on user input.  Then, after filtering by user inputs, a series of plots are created based on the filtered data table.  They will be named Tabs in the shiny app.  These plots constitute a workflow for proper;y analyzing longitudinal data for purposes of understanding the capability of a system.  Specifically, there will be a DT() data table, a Run Chart, a Bar Chart, a Line Chart (which can accept multiple lines), an Untrended Expectation Chart (a control chart), a Trended Expectation Chart (a control chart), and a Cohort Chart (that will track a GROUP of observations over time).   This EDA shiny app must be completely general - NOT specific to any given csv or excel file.  I will seek your advice on how to make the coding easier by controlling the csv or excel file PRIOR to uploading by the app.  I suppose a specific format for all uploaded files will make it much easier on the shiny app.  I don't mind data cleaning if it simplifies the building of the EDA app.  ALL controls will be on top; NO sidebars.  The plotting area will be in subsequent row giving maximum space for displaying the chart.   All plots in all tabs will utilize their own row that spans the entire horizontal space.  We can't be limited by any bootstrap container defaults.  All of my charts currently exist as stand alone ggplot2 pipelines; but they are not reactive.  They each need to be changed into a reactive format and be fed the data from the filtered data table (a DT table).  ALL tables are to be DT tables (NO kable or kableExtra tables).  The user will define the Title, Subtitle, and Caption for each chart.  Will it be better to have one shiny app for each type of chart that has the data table plus one chart?  When complete each chart must permit the downloading of the chart to png, svg and pdf formats.  Do you need additional guidance to proceed methodically, starting with the UI and the DT data table?
